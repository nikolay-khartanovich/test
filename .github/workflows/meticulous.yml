# –§–∞–π–ª —É–¥–∞–ª–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ add-meticulous-button.yml

name: "Meticulous Tests"

on:
  pull_request_target:
    types: [opened, reopened]
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  actions: write
  issues: write
  statuses: write

jobs:
  # –î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PR
  add-initial-comment:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Add information comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            
            const body = `## Meticulous —Ç–µ—Å—Ç—ã
            
            –î–ª—è –∑–∞–ø—É—Å–∫–∞ Meticulous —Ç–µ—Å—Ç–æ–≤ –Ω–∞ —ç—Ç–æ–º PR, –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º:
            
            \`\`\`
            /meticulous
            \`\`\`
            
            –î—Ä—É–≥–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
            \`/help\` –∏–ª–∏ \`/–ø–æ–º–æ—â—å\` - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
            `;
            
            await github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body
            });

  # –ó–∞–ø—É—Å–∫–∞–µ—Ç Meticulous —Ç–µ—Å—Ç—ã –ø—Ä–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ /meticulous —á–µ—Ä–µ–∑ workflow_dispatch
  trigger-meticulous:
    if: github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '/meticulous')
    runs-on: ubuntu-latest
    steps:
      - name: Add rocket reaction to comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            
            await github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Notify PR about start
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner,
              repo,
              body: 'üöÄ –ó–∞–ø—É—Å–∫–∞—é Meticulous —Ç–µ—Å—Ç—ã. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.'
            });

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          context: "Meticulous Tests"
          status: pending
          description: "–ó–∞–ø—É—Å–∫ Meticulous —Ç–µ—Å—Ç–æ–≤..."

      - name: Get PR info
        uses: actions/github-script@v6
        id: pr-info
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            
            const { data: pr } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: issue_number
            });
            
            return {
              head_ref: pr.head.ref,
              head_sha: pr.head.sha,
              base_ref: pr.base.ref,
              base_sha: pr.base.sha,
              pr_number: issue_number
            };

      - name: Trigger Meticulous Runner Workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: meticulous-runner.yml
          ref: ${{ fromJson(steps.pr-info.outputs.result).head_ref }}
          inputs: |
            {
              "head_ref": "${{ fromJson(steps.pr-info.outputs.result).head_ref }}",
              "head_sha": "${{ fromJson(steps.pr-info.outputs.result).head_sha }}",
              "base_ref": "${{ fromJson(steps.pr-info.outputs.result).base_ref }}",
              "base_sha": "${{ fromJson(steps.pr-info.outputs.result).base_sha }}",
              "pr_number": "${{ fromJson(steps.pr-info.outputs.result).pr_number }}"
            }

  # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø—Ä–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ /help –∏–ª–∏ /–ø–æ–º–æ—â—å
  add-help-comment:
    if: github.event_name == 'issue_comment' && github.event.issue.pull_request && (contains(github.event.comment.body, '/help') || contains(github.event.comment.body, '/–ø–æ–º–æ—â—å'))
    runs-on: ubuntu-latest
    steps:
      - name: Add help comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            
            const body = `## –ö–æ–º–∞–Ω–¥—ã Meticulous
            
            –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —ç—Ç–æ–≥–æ PR:
            
            - \`/meticulous\` - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É Meticulous
            - \`/help\` –∏–ª–∏ \`/–ø–æ–º–æ—â—å\` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner,
              repo,
              body
            });
            
            await github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: 'eyes'
            });