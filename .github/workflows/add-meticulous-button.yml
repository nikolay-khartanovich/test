name: Meticulous One-Click

on:
  pull_request_target:
    types: [opened, reopened, synchronize]
  repository_dispatch:
    types: [run-meticulous-test]

permissions:
  pull-requests: write
  actions: write
  contents: read
  issues: write

jobs:
  add-button:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Add One-Click Button
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            
            // Create workflow dispatch URL
            const workflowUrl = `https://github.com/${owner}/${repo}/actions/workflows/meticulous-webhook-handler.yml/dispatch`;
            
            // Create comment with button that triggers the action
            const commentBody = `
            ## –ó–∞–ø—É—Å–∫ Meticulous Change Report

            <p align="center">
              <a href="${workflowUrl}?ref=master&pr_number=${issue_number}">
                <img src="https://img.shields.io/badge/–ó–ê–ü–£–°–¢–ò–¢–¨-–ü–†–û–í–ï–†–ö–£-44CC11?style=for-the-badge" alt="–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É" width="300" />
              </a>
            </p>
            
            > –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Meticulous –ø—Ä—è–º–æ –≤ —ç—Ç–æ–º PR
            `;
            
            // Check if we already posted this comment
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('–ó–∞–ø—É—Å–∫ Meticulous Change Report')
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: commentBody
              });
            }

  # Setup a GitHub App to handle repository_dispatch events for button clicks
  # This part requires a separate GitHub App with proper credentials
  # The workflow below demonstrates what happens after the button is clicked

  run-meticulous:
    if: |
      (github.event_name == 'repository_dispatch' && 
      github.event.action == 'run-meticulous-test')
    runs-on: ubuntu-latest
    steps:
      - name: Determine PR number
        id: pr_info
        run: |
          PR_NUMBER=$(echo "${{ github.event.client_payload.pr_number }}")
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Notify PR start
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = ${{ steps.pr_info.outputs.pr_number }};
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: 'üöÄ –ó–∞–ø—É—Å–∫–∞—é Meticulous Change Report –¥–ª—è —ç—Ç–æ–≥–æ PR. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.'
            });

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for PR analysis

      - name: Setup Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}

      - name: Install dependencies
        run: |
          npm ci

      - name: Install Angular CLI
        run: |
          npm install -g @angular/cli

      - name: Build project
        run: |
          ng build

      - name: Start project
        run: |
          ng serve --port 4200 &
          sleep 5

      - name: Run Meticulous tests
        id: meticulous
        uses: alwaysmeticulous/report-diffs-action/cloud-compute@v1
        with:
          api-token: ${{ secrets.METICULOUS_API_TOKEN }}
          app-url: "http://localhost:4200/"

      - name: Post results to PR
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = ${{ steps.pr_info.outputs.pr_number }};
            
            let resultsMessage = '';
            if ('${{ steps.meticulous.outcome }}' === 'success') {
              resultsMessage = `‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ Meticulous —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –∑–¥–µ—Å—å: ${{ steps.meticulous.outputs.report-url || 'URL –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω' }}`;
            } else {
              resultsMessage = `‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ Meticulous –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ workflow –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.`;
            }
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: resultsMessage
            }); 