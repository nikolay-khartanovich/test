name: Add Meticulous Button to PR

on:
  pull_request_target:
    types: [opened, reopened, synchronize]
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  actions: write
  contents: read
  issues: write

jobs:
  add-button:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Add Comment with Meticulous Button
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            
            // Create comment with button command
            const commentBody = `
            ## –ó–∞–ø—É—Å–∫ Meticulous Change Report
            
            –ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É Meticulous –Ω–∞ —ç—Ç–æ–º PR, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º:
            
            \`\`\`
            /run-meticulous
            \`\`\`
            
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ —ç—Ç–æ–º PR –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏.
            `;
            
            // Check if we already posted this comment
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('–ó–∞–ø—É—Å–∫ Meticulous Change Report')
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existingComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: commentBody
              });
            }

  run-meticulous:
    if: github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '/run-meticulous')
    runs-on: ubuntu-latest
    steps:
      - name: Acknowledge comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            
            await github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: 'üöÄ –ó–∞–ø—É—Å–∫–∞—é Meticulous Change Report –¥–ª—è —ç—Ç–æ–≥–æ PR. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.'
            });

      - name: Get PR branch information
        id: pr_info
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            
            const { data: pr } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: issue_number
            });
            
            return {
              ref: pr.head.ref,
              sha: pr.head.sha
            };

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr_info.outputs.result.ref }}

      - name: Setup Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}

      - name: Install dependencies
        run: |
          npm ci

      - name: Install Angular CLI
        run: |
          npm install -g @angular/cli

      - name: Build project
        run: |
          ng build

      - name: Start project
        run: |
          ng serve --port 4200 &
          sleep 5

      - name: Run Meticulous tests
        id: meticulous
        uses: alwaysmeticulous/report-diffs-action/cloud-compute@v1
        with:
          api-token: ${{ secrets.METICULOUS_API_TOKEN }}
          app-url: "http://localhost:4200/"

      - name: Post results to PR
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            
            let resultsMessage = '';
            if ('${{ steps.meticulous.outcome }}' === 'success') {
              resultsMessage = `‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ Meticulous —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –∑–¥–µ—Å—å: ${{ steps.meticulous.outputs.report-url || 'URL –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω' }}`;
            } else {
              resultsMessage = `‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ Meticulous –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ workflow –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.`;
            }
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: resultsMessage
            }); 